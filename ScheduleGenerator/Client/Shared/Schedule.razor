@page "/schedules/{Id:int}"
@using ScheduleGenerator.Shared.Enums
@using Microsoft.AspNetCore.Authorization
@inherits ScheduleBase
@attribute [Authorize]

@if (Loading)
{
    <div class="d-flex align-items-center justify-content-center text-white">
        <strong>Loading...</strong>
        <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
    </div>
}
else if (LoadFailed)
{
    <div class="alert alert-danger mt-3 mb-0">Failed to load items, try again later</div>
}
else if (DeleteFailed)
{
    <div class="alert alert-danger mt-3 mb-0">Failed to delete schedule, try again later</div>
}
else
{
    <div style="overflow-y: auto; height: 550px">
        <div id="content">            
            <table class="table">
                <thead>
                <tr class="text-center @(ActivatePdfStyle ? "" : "text-white")">
                    <th scope="col">Monday</th>
                    <th scope="col">Tuesday</th>
                    <th scope="col">Wednesday</th>
                    <th scope="col">Thursday</th>
                    <th scope="col">Friday</th>
                </tr>
                </thead>
                <tbody class="table-borderless">
                @for (int i = 0; i < ScheduleItemsState.ScheduleItems.Values.Select(scheduleItem => scheduleItem.Count).Max(); i++)
                {
                    <tr>
                        @foreach (var weekDay in ScheduleItemsState.ScheduleItems.Keys)
                        {
                            <td style="width: 20%">
                                @if (i < ScheduleItemsState.ScheduleItems[weekDay].Count)
                                {
                                    <div class=" text-center">
                                        <ScheduleItem Item="ScheduleItemsState.ScheduleItems[weekDay].ElementAt(i)"></ScheduleItem>
                                    </div>

                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    

    <div class="w-100 d-flex justify-content-around border-top border-white my-2">
        <button class="btn btn-primary mt-3 w-25" @onclick="() => CreateScheduleItemModal.Open()" type="button">
            Add item
        </button>
        <button class="btn btn-primary mt-3 w-25" type="button" @onclick="DownloadSchedule">
            Download
        </button>
        <button class="btn btn-danger mt-3 w-25" type="button" @onclick="@(async () => await DeleteScheduleAsync())">
            Delete
        </button>
    </div>

    <CreateScheduleItemModal @ref="CreateScheduleItemModal" ScheduleId="@Id"></CreateScheduleItemModal>
}



